// <auto-generated />
using Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;

namespace Database.Migrations
{
    [DbContext(typeof(Context))]
    partial class ContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.2-rtm-10011")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", 0 /*SqlServerValueGenerationStrategy.IdentityColumn*/);

            modelBuilder.Entity("Database.Game", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("CurrentPlayer");

                    b.Property<string>("Fen");

                    b.Property<string>("InitialPosition");

                    b.Property<int>("Variant");

                    b.HasKey("ID");

                    b.ToTable("Games");
                });

            modelBuilder.Entity("Database.PdnMove", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid?>("TurnID");

                    b.HasKey("ID");

                    b.HasIndex("TurnID");

                    b.ToTable("Moves");
                });

            modelBuilder.Entity("Database.PdnTurn", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("BlackMoveID");

                    b.Property<Guid>("GameID");

                    b.Property<Guid>("WhiteMoveID");

                    b.HasKey("ID");

                    b.HasIndex("GameID");

                    b.ToTable("Turns");
                });

            modelBuilder.Entity("Database.PdnMove", b =>
                {
                    b.HasOne("Database.PdnTurn", "Turn")
                        .WithMany()
                        .HasForeignKey("TurnID");
                });

            modelBuilder.Entity("Database.PdnTurn", b =>
                {
                    b.HasOne("Database.Game")
                        .WithMany("Turns")
                        .HasForeignKey("GameID")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}

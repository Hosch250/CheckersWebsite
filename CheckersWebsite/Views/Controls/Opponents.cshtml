@using CheckersWebsite.Facade
@using CheckersWebsite.Resources
@using CheckersWebsite.Controllers
@model GameController

@{
    var playerID = (Guid)ViewData["playerID"];
    var blackPlayerID = (Guid)ViewData["blackPlayerID"];
    var whitePlayerID = (Guid)ViewData["whitePlayerID"];
}
<div><b>@Resources.ResourceManager.GetString(((Variant)Model.Variant).ToString())</b></div>
<div>
    <svg width="20" height="20" style="background-color: white" version="1.1" xmlns="http://www.w3.org/2000/svg">
        <circle cx="10" cy="15" r="4" stroke="black" fill="white" stroke-width="2"></circle>
    </svg>
    <span id="white-player-text" class="@(playerID == whitePlayerID ? "bold" : "")">@(whitePlayerID != ComputerPlayer.ComputerPlayerID ? Resources.Human : Resources.Computer)</span>
</div>
<div>
    <svg width="20" height="20" style="background-color: white" version="1.1" xmlns="http://www.w3.org/2000/svg">
        <circle cx="10" cy="15" r="4" stroke="black" fill="black" stroke-width="2"></circle>
    </svg>
    <span id="black-player-text" class="@(playerID == blackPlayerID ? "bold" : "")">@(blackPlayerID != ComputerPlayer.ComputerPlayerID ? Resources.Human : Resources.Computer)</span>
</div>
<div class="win-status" style="text-align: center">
    @switch (Model.GameStatus)
    {
        case Status.InProgress:
            @: *
            break;
        case Status.Drawn:
            @: ½ - ½
            break;
        case Status.BlackWin:
            @: 0 - 1
            break;
        case Status.WhiteWin:
            @: 1 - 0
            break;
    }
</div>